-- Keymaps for DAP (Debug Adapter Protocol) in Neovim

local dap = require("dap")

vim.keymap.set("n", "<leader>dc", function()
	dap.continue()
end, { desc = "Continue" })
vim.keymap.set("n", "<leader>dl", function()
	dap.step_over()
end, { desc = "Step over" })
vim.keymap.set("n", "<leader>dk", function()
	dap.step_out()
end, { desc = "Step out" })
vim.keymap.set("n", "<leader>dj", function()
	dap.step_into()
end, { desc = "Step into" })
vim.keymap.set("n", "<leader>dh", function()
	dap.step_back()
end, { desc = "Step back" })
vim.keymap.set("n", "<leader>dr", function()
	dap.repl()
end, { desc = "Eval interactively" })
vim.keymap.set("n", "<leader>de", function()
	dap.run_last()
end, { desc = "Run last" })
vim.keymap.set("n", "<leader>dq", function()
	dap.toggle_breakpoint()
end, { desc = "Toggle Breakpoint" })
vim.keymap.set("n", "<leader>dQ", function()
	dap.set_breakpoint()
end, { desc = "Toggle Breakpoint" })
vim.keymap.set("n", "<leader>dt", function()
	dap.run_to_cursor()
end, { desc = "Toggle Breakpoint" })
-- vim.keymap.set("n", "<Leader>lp", function()
-- 	dap.set_breakpoint(nil, nil, vim.fn.input("Log point message: "))
-- end, { desc = "Log point" })

-- Keymaps for DAP UI
vim.keymap.set("n", "<leader>du", function()
	require("dapui").toggle()
end, { desc = "Toggle DAP UI" })
